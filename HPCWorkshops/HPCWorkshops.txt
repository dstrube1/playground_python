2025-07-30:
# Make sure you are on a GPU node:
interact -gpu

# Load the TensorFlow 2 Container:
singularity shell --nv /ocean/containers/ngc/tensorflow/tensorflow_23.04-tf2-py3.sif

# And start TensorFlow:
python
import tensorflow
# Or 
python CNN_Dropout.py

2025-07-29:
dstrube
sTwAajA#4c7$!Kj

ssh dstrube@bridges2.psc.edu
interact

https://www.youtube.com/@XSEDETraining

Spark:
module load spark

Tensorflow:
singularity shell --nv /ocean/containers/ngc/tensorflow/tensorflow_23.04-tf2-py3.sif

/BigData
 /Clustering
 /MNIST
 /Recommender
 /Shakespeare
 
~training/Setup
 
3 V's of Big Data: Volume, Velocity, Variety

ACID: Atomicity, Consistency, Isolation, Durability

Spark Transformations & Actions:
http://spark.apache.org/docs/latest/api/python/reference/api/pyspark.RDD.html#pyspark.RDD

cd BigData/Shakespeare 
module load spark
pyspark

rdd = sc.textFile("Complete_Shakespeare.txt")
rdd.count() # count of lines
# count of words:
# wordsRDD = rdd.flatMap(lambda line: line.split())
# to get better count, remove punctuation and convert everything to lowercase:
import re
wordsRDD = rdd.flatMap(lambda line: re.findall(r'\b\w+\b', line.lower()))
print(f"Word count: {wordsRDD.count()}")

distinctWords = wordsRDD.distinct()
print(f"Distinct word count: {distinctWords.count()}")

# Map each word to a (word, 1) pair => turn words into k/v pair
wordPairsRDD = wordsRDD.map(lambda word: (word, 1))

# Reduce by key (i.e., word) to count occurrences
wordCountsRDD = wordPairsRDD.reduceByKey(lambda a, b: a + b)

# Flip keys and values so we can sort on word count instead of words. Could trigger repartition
flipped_rdd = wordCountsRDD.map(lambda x: x[1], x[0])
results_rdd = flipped_rdd.sortByKey(False)
results_rdd.take(5)

# Collect or sort as needed
for word, count in wordCountsRDD.take(10):  # show sample output
    print(f"{word}: {count}")

to run: save the above into a .py file and run like this:
spark-submit exercise.py

nltk: Natural Language ToolKit
PB: petabytes
SGD: Stochastic Gradient Descent
ALS: Alternating Least Squares
CFD: Computational fluid dynamics
